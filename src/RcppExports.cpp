// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Rcpp_logSumExp
double Rcpp_logSumExp(const arma::vec& log_x);
RcppExport SEXP _smarter_Rcpp_logSumExp(SEXP log_xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type log_x(log_xSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcpp_logSumExp(log_x));
    return rcpp_result_gen;
END_RCPP
}
// Rcpp_round
void Rcpp_round(arma::vec& vv, const arma::uword& digits);
RcppExport SEXP _smarter_Rcpp_round(SEXP vvSEXP, SEXP digitsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type vv(vvSEXP);
    Rcpp::traits::input_parameter< const arma::uword& >::type digits(digitsSEXP);
    Rcpp_round(vv, digits);
    return R_NilValue;
END_RCPP
}
// Rcpp_chk_threads
void Rcpp_chk_threads(const arma::uword& NN, const int& ncores);
RcppExport SEXP _smarter_Rcpp_chk_threads(SEXP NNSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::uword& >::type NN(NNSEXP);
    Rcpp::traits::input_parameter< const int& >::type ncores(ncoresSEXP);
    Rcpp_chk_threads(NN, ncores);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_smarter_Rcpp_logSumExp", (DL_FUNC) &_smarter_Rcpp_logSumExp, 1},
    {"_smarter_Rcpp_round", (DL_FUNC) &_smarter_Rcpp_round, 2},
    {"_smarter_Rcpp_chk_threads", (DL_FUNC) &_smarter_Rcpp_chk_threads, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_smarter(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
